return(light)
}
light_calc(0,5,10000000,7000000,50,0.5)
10000000-7000000
10000000/
7000000
z1=0
z2=5
a1=10000000
a2=7000000
ir=50
mu = 0.5
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
i1
i2
ir * exp(-(mu)*seq(0:5))
ir * exp(-(mu)*0)
ir * exp(-(mu)*sew(0,5,1))
ir * exp(-(mu)*seq(0,5,1))
seq(0:5)
i =  ir * exp(-(mu)*seq(z1, z2 , 0.1))
i
deps = seq(z1, z2 , 1)
i =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
area
pracma::trapz(area,i))
pracma::trapz(area,i)
plot(area,i)
pracma::trapz(rev(area),rev(i))
plot(rev(area),rev(i))
pracma::trapz(rev(area),rev(i))/a1
pracma::trapz(rev(area),rev(i)
)
plot((area),rev(i))
area
plot(rev(area),rev(i))
plot((area),rev(i))
plot((area),(i))
i2
pracma::trapz(rev(area),rev(i))/a1
z2=10
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
deps = seq(z1, z2 , 1)
i =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
pracma::trapz(rev(area),rev(i))/a1
i2
irr %*% deps
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
irr %*% deps
pracma::trapz(rev(area),rev(i))
?trapz
pracma::cumtrapz(rev(area),rev(i))/a1
sum(pracma::cumtrapz(rev(area),rev(i))/a1)
pracma::cumtrapz(rev(area),rev(i))/a1
pracma::cumtrapz(rev(area),rev(i))
deps
irr
area
pracma::trapz(rev(area),rev(i))/a1
pracma::trapz(rev(area),rev(i))
irr %*% deps
(irr %*% deps) / a1
irr
(irr %*% area) / a1
pracma::trapz(rev(area),rev(i))/a1
(irr %*% area)
pracma::trapz(rev(area),rev(i))
area
irr
mu=1
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
(irr %*% area) / a1
pracma::trapz(rev(area),rev(i))/a1
mu=0.5
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
(irr %*% area) / a1
pracma::trapz(rev(area),rev(i))/a1
mu
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
(irr %*% area) / a1
pracma::trapz(rev(area),rev(i))/a1
mu=1
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
(irr %*% area) / a1
pracma::trapz(rev(area),rev(i))/a1
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
(irr %*% area) / a1
pracma::trapz(rev(area),rev(irr))/a1
light_calc <- function(z1,z2,a1,a2,ir,mu){
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
print(i1)
print(i2)
t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
light <- abs(trapz(t_df$area,t_df$irradiance))/a1
return(light)
}
light_calc(0,5,10000000,7000000,50,0.5)
light_calc <- function(z1,z2,a1,a2,ir,mu){
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
print(i1)
print(i2)
t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
light <- abs(pracma::trapz(t_df$area,t_df$irradiance))/a1
return(light)
}
light_calc(0,5,10000000,7000000,50,0.5)
light_calc(0,5,10000000,7000000,50,1.)
light_calc(0,5,10000000,7000000,50,0.4)
light_calc2 <- function(z1,z2,a1,a2,ir,mu){
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
(irr %*% area) / a1
return(pracma::trapz(rev(area),rev(irr))/a1)
#
# print(i1)
# print(i2)
#
# t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
#
# light <- abs(pracma::trapz(t_df$area,t_df$irradiance))/a1
# return(light)
}
light_calc2(0,5,10000000,7000000,50,0.5)
light_calc2 <- function(z1,z2,a1,a2,ir,mu){
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
(irr %*% area) / a1
return(pracma::trapz(rev(area),rev(irr))/a1)
#
# print(i1)
# print(i2)
#
# t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
#
# light <- abs(pracma::trapz(t_df$area,t_df$irradiance))/a1
# return(light)
}
light_calc2(0,5,10000000,7000000,50,0.5)
z1=0
z2=5
a1=10000000
a2=7000000
ir=50
mu = 0.5
light_calc <- function(z1,z2,a1,a2,ir,mu){
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
print(i1)
print(i2)
t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
light <- abs(pracma::trapz(t_df$area,t_df$irradiance))/a1
return(light)
}
light_calc(0,5,10000000,7000000,50,0.4)
light_calc2(0,5,10000000,7000000,50,0.4)
light_calc(0,5,10000000,7000000,50,0.4)
light_calc2(0,5,10000000,7000000,50,0.4)
light_calc(0,5,10000000,7000000,50,0.8)
light_calc2(0,5,10000000,7000000,50,0.8)
light_calc2 <- function(z1,z2,a1,a2,ir,mu){
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
(irr %*% area) / a1
return(pracma::trapz(rev(area),rev(irr))/a1)
#
# print(i1)
# print(i2)
#
# t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
#
# light <- abs(pracma::trapz(t_df$area,t_df$irradiance))/a1
# return(light)
}
light_calc2(0,5,10000000,7000000,50,0.5)
z1=0
z2=5
a1=10000000
a2=7000000
ir=50
mu = 0.5
light_calc <- function(z1,z2,a1,a2,ir,mu){
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
# print(i1)
# print(i2)
t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
light <- abs(pracma::trapz(t_df$area,t_df$irradiance))/a1
return(light)
}
light_calc(0,5,10000000,7000000,50,0.8)
light_calc2(0,5,10000000,7000000,50,0.8)
light_calc(0,5,10000000,7000000,50,1.5)
light_calc2(0,5,10000000,7000000,50,1.5)
z1=0
z2=5
a1=10000000
a2=7000000
ir=50
mu=1.5
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
pracma::trapz(rev(area),rev(irr))/a1
abs(pracma::trapz(t_df$area,t_df$irradiance))/a1
i2
plot(rev(area),rev(irr))
plot(t_df$area,t_df$irradiance))
plot(t_df$area,t_df$irradiance)
library(pracma)
trapz(t_df$area,t_df$irradiance)
trapz(rev(area),rev(irr))
intarea = pracma::trapz(rev(deps),rev(area))
intarea
plot(rev(deps),rev(area))
intarea = pracma::trapz((deps),(area))
intarea
pracma::trapz(rev(area),rev(irr))/intarea
pracma::trapz(rev(area),rev(irr))/a1
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
print(i2)
pracma::trapz(rev(area),rev(irr))/intarea
mu=0.5
z1=0
z2=5
a1=10000000
a2=7000000
ir=50
mu=1.5
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
i1 <- ir * exp(-(mu)*z1)
i2 <- ir * exp(-(mu)*z2)
t_df <- data.frame(area = c(a1,a2),irradiance = c(i1,i2))
print(i2)
pracma::trapz(rev(area),rev(irr))/intarea
light_calc2 <- function(z1,z2,a1,a2,ir,mu){
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
range(irr)
mean(irr)
return(pracma::trapz(rev(area),rev(irr))/a1)
}
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
i2=50,
mu=1.5)
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=1.5)
print(mean(irr))
light_calc2 <- function(z1,z2,a1,a2,ir,mu){
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
print(range(irr))
print(mean(irr))
return(pracma::trapz(rev(area),rev(irr))/a1)
}
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=1.5)
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=0)
z1=0
z2=5
a1=10000000
a2=7000000
ir=50
mu=0
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
pracma::trapz(rev(area),rev(irr))/a1
pracma::cumsumtrapz(rev(area),rev(irr))/a1
pracma::cumtrapz(rev(area),rev(irr))/a1
sum(pracma::cumtrapz(rev(area),rev(irr)))/a1
irr
rev(area
)
rev(irr)
?cumtrapz
deps = seq(z1, z2 , 0.1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
print(range(irr))
print(mean(irr))
sum(pracma::cumtrapz(rev(area),rev(irr)))/a1
area
irr
sum(pracma::trapz(rev(area),rev(irr)))/a1
pracma::trapz(rev(area),rev(irr))
pracma::trapz(rev(area),rev(irr))/a1
sum(pracma::cumtrapz(rev(area),rev(irr)))/a1
pracma::cumtrapz(rev(area),rev(irr))
plot(rev(area),rev(irr))
plot((area),(irr))
print(mean(irr))
sum(pracma::cumtrapz(rev(area),rev(irr)))/a1
pracma::cumtrapz(rev(area),rev(irr))
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
print(range(irr))
print(mean(irr))
sum(pracma::cumtrapz(rev(area),rev(irr)))/a1
pracma::cumtrapz(rev(area),rev(irr))
light_calc2 <- function(z1,z2,a1,a2,ir,mu){
deps = seq(z1, z2 , 1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
print(range(irr))
print(mean(irr))
print((area %*% irr)/a1)
sum(pracma::cumtrapz(rev(area),rev(irr)))/a1
return(pracma::trapz(rev(area),rev(irr))/a1)
}
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=0)
light_calc2 <- function(z1,z2,a1,a2,ir,mu){
deps = seq(z1, z2 , 0.1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
print(range(irr))
print(mean(irr))
print((area %*% irr)/a1)
sum(pracma::cumtrapz(rev(area),rev(irr)))/a1
return(pracma::trapz(rev(area),rev(irr))/a1)
}
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=0)
light_calc2 <- function(z1,z2,a1,a2,ir,mu){
deps = seq(z1, z2 , 0.1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
print(range(irr))
print(mean(irr))
print((area %*% irr)/intarea)
sum(pracma::cumtrapz(rev(area),rev(irr)))/a1
return(pracma::trapz(rev(area),rev(irr))/a1)
}
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=0)
area
deps = seq(z1, z2 , 0.1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
print(range(irr))
print(mean(irr))
irr
area
intarea
print((area %*% irr)/ (sum(area)))
light_calc2 <- function(z1,z2,a1,a2,ir,mu){
deps = seq(z1, z2 , 0.1)
irr =  ir * exp(-(mu)*deps)
area = approx(c(z1,z2), c(a1,a2), deps)$y
intarea = pracma::trapz((deps),(area))
print(range(irr))
print(mean(irr))
print((area %*% irr)/ (sum(area)))
sum(pracma::cumtrapz(rev(area),rev(irr)))/a1
return(pracma::trapz(rev(area),rev(irr))/a1)
}
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=0)
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=1.5)
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=2)
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=0.1)
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=0.0)
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=0.5)
light_calc2(z1=0,z2=5,a1=10000000,a2=7000000,
ir=50,
mu=0.9)
2 * exp(2)
?exp
exp(2)
exp(1)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
remotes::install_github("robertladwig/LakeEnsemblR.WQ")
setwd('LakeMendota/')
# Load LakeEnsemblR
library(LakeEnsemblR)
library(LakeEnsemblR.WQ)
# Set config file
config_file <- "LakeEnsemblR.yaml"
model <- c("FLake", "GLM", "GOTM", "Simstrat", "MyLake")
create_input_tables(folder = ".", config_file = 'LakeEnsemblR_WQ.yaml', folder_out = 'WQinput', input = 'all',
models_coupled = c("GLM-AED2", "GOTM-Selmaprotbas", "GOTM-WET","Simstrat-AED2"))
LakeEnsemblR.WQ::export_config(config_file = 'LakeEnsemblR_WQ.yaml', folder = ".", verbose = FALSE,
convert_from_lakeensemblr = TRUE,
ler_config_file = "LakeEnsemblR.yaml")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
remotes::install_github("robertladwig/LakeEnsemblR.WQ")
remotes::install_github("robertladwig/LakeEnsemblR.WQ", force = T)
setwd('LakeMendota/')
# Load LakeEnsemblR
library(LakeEnsemblR)
library(LakeEnsemblR.WQ)
# Set config file
config_file <- "LakeEnsemblR.yaml"
model <- c("FLake", "GLM", "GOTM", "Simstrat", "MyLake")
create_input_tables(folder = ".", config_file = 'LakeEnsemblR_WQ.yaml', folder_out = 'WQinput', input = 'all',
models_coupled = c("GLM-AED2", "GOTM-Selmaprotbas", "GOTM-WET","Simstrat-AED2"))
LakeEnsemblR.WQ::export_config(config_file = 'LakeEnsemblR_WQ.yaml', folder = ".", verbose = FALSE,
convert_from_lakeensemblr = TRUE,
ler_config_file = "LakeEnsemblR.yaml")
beta = 0.1
jin = 5
c0 = 15
k = 0.12
for (t in c(5,10,30)){
C = c0 * exp(-k * t) - (jin/(k + beta)) * exp(-k * t) + (jin/(k + beta)) * exp(beta * t)
print(C)
}
t = seq(0,50,1)
plot(c0 * exp(-k * t) - (jin/(k + beta)) * exp(-k * t) + (jin/(k + beta)) * exp(beta * t),
+      ylab = 'Phosphorus [mg/m3]', xlab = 'Time [year]')
beta = 0.1
jin = 5
c0 = 15
k = 0.12
for (t in c(5,10,30)){
C = c0 * exp(-k * t) - (jin/(k + beta)) * exp(-k * t) + (jin/(k + beta)) * exp(beta * t)
print(C)
}
t = seq(0,50,1)
plot(c0 * exp(-k * t) - (jin/(k + beta)) * exp(-k * t) + (jin/(k + beta)) * exp(beta * t),
ylab = 'Phosphorus [mg/m3]', xlab = 'Time [year]')
t=8
c0 * exp(-k * t) - (jin/(k + beta)) * exp(-k * t) + (jin/(k + beta)) * exp(beta * t)
t=4
c0 * exp(-k * t) - (jin/(k + beta)) * exp(-k * t) + (jin/(k + beta)) * exp(beta * t)
beta = 0.1
jin = 6
c0 = 50
k = 0.12
c0 * exp(-k * t) - (jin/(k + beta)) * exp(-k * t) + (jin/(k + beta)) * exp(beta * t)
t=8
c0 * exp(-k * t) - (jin/(k + beta)) * exp(-k * t) + (jin/(k + beta)) * exp(beta * t)
